// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'deepmodel', 'domReady!', 'common', 'jqueryui', 'jsrender', 'bootstrap', 'jqcookie', 'json2', 'jssdk'], function($, _, svc) {
    var articleView, _ref;
    return articleView = (function(_super) {
      __extends(articleView, _super);

      function articleView() {
        this.active = __bind(this.active, this);
        this.getList = __bind(this.getList, this);
        this.getAccount = __bind(this.getAccount, this);
        _ref = articleView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      articleView.prototype.el = '#article';

      articleView.prototype.tmpUrl = 'template/article.html';

      articleView.prototype.itemTmpId = '#item-template';

      articleView.prototype.initialize = function() {
        this.$el.load(this.tmpUrl);
        pixnet.init({
          consumerKey: "6e6486d3702401c82905633c3519132f",
          consumerSecret: "de013d92491a69c6470e83dc3e792b9b",
          callbackUrl: "http://106.186.118.85/~nobita/girls-wall-sdk/"
        });
        this.getList();
        return pixnet.login(this.getAccount);
      };

      articleView.prototype.getAccount = function() {
        return pixnet.users.getAccount(function(d) {
          console.log(d);
          return alert("Welcome, " + d.account.display_name);
        });
      };

      articleView.prototype.getList = function() {
        var _this = this;
        return pixnet.mainpage.getAlbumsByCategory(function(data) {
          var index, item, len, shuffle;
          len = data.length;
          index = data.length;
          while (index--) {
            item = data[index];
            item.id = index;
            item.score = (len - index) % 15 * 20;
            item.thumb = item.thumb.replace(/[\d]+x[\d]+/g, "300x300");
          }
          shuffle = _.shuffle(data);
          return _this.$('.container').html($(_this.itemTmpId).render(shuffle)).find('img').draggable({
            start: function(e, ui) {
              return $(e.target).addClass('onActive');
            },
            stop: function(e, ui) {
              var pos;
              $(e.target).removeClass('onActive');
              pos = $(e.target).position();
              if (e.target.x < 350 && $('.mybox').hasClass('onMouseover')) {
                return Backbone.trigger('addItem', $(e.target));
              }
            }
          });
        }, 'hot', 1, {
          count: 100,
          strict_filter: 1,
          ios: 1
        });
      };

      articleView.prototype.events = {
        "click img.img-rounded": "active"
      };

      articleView.prototype.active = function(e) {
        return $(e.target).addClass('onActive');
      };

      $.app.article = new articleView();

      return articleView;

    })(Backbone.View);
  });

}).call(this);

/*
//@ sourceMappingURL=article.map
*/
