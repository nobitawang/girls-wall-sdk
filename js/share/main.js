// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'deepmodel', 'domReady!', 'common', 'jqueryui', 'jsrender', 'bootstrap', 'jqcookie', 'json2', 'lightbox'], function($, _, svc) {
    var mainView;
    return mainView = (function(_super) {
      __extends(mainView, _super);

      function mainView() {
        this.getImages = __bind(this.getImages, this);
        return mainView.__super__.constructor.apply(this, arguments);
      }

      mainView.prototype.el = '.image-row';

      mainView.prototype.itemTmpId = '#box-item-template';

      mainView.prototype.initialize = function() {
        this.key = location.search.match(/\=(.*)?/)[1];
        return this.getImages();
      };

      mainView.prototype.getImages = function() {
        return $.get($.app.service.getshare + '?id=' + this.key).done((function(_this) {
          return function(data) {
            if (data) {
              return _this.$el.html($(_this.itemTmpId).render(data));
            }
          };
        })(this));
      };

      $.app.main = new mainView();

      return mainView;

    })(Backbone.View);
  });

}).call(this);
